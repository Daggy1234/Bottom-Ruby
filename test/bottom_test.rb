require "test_helper"

class BottomTest < Minitest::Test
  def test_that_it_has_a_version_number
    refute_nil ::Bottom::VERSION
  end

  def test_parity
    enc = Bottom.encode("test")
    dec = Bottom.decode(enc)
    assert_equal("test", dec)
  end

  def test_error
    assert_raises( Bottom::DecodeError ) { Bottom.decode("a") }
  end

  def test_encode
    assert_equal("ðŸ’–ðŸ’–,,,,ðŸ‘‰ðŸ‘ˆðŸ’–ðŸ’–,ðŸ‘‰ðŸ‘ˆðŸ’–ðŸ’–ðŸ¥º,,,ðŸ‘‰ðŸ‘ˆðŸ’–ðŸ’–ðŸ¥º,,,ðŸ‘‰ðŸ‘ˆðŸ’–ðŸ’–âœ¨,ðŸ‘‰ðŸ‘ˆâœ¨âœ¨âœ¨,,ðŸ‘‰ðŸ‘ˆðŸ’–ðŸ’–âœ¨ðŸ¥º,,,,ðŸ‘‰ðŸ‘ˆðŸ’–ðŸ’–âœ¨,ðŸ‘‰ðŸ‘ˆðŸ’–ðŸ’–âœ¨,,,,ðŸ‘‰ðŸ‘ˆðŸ’–ðŸ’–ðŸ¥º,,,ðŸ‘‰ðŸ‘ˆðŸ’–ðŸ’–ðŸ‘‰ðŸ‘ˆ",Bottom.encode("hello world"))
  end

  def test_decode
    assert_equal("ruby is cool",Bottom.decode("ðŸ’–ðŸ’–âœ¨,,,,ðŸ‘‰ðŸ‘ˆðŸ’–ðŸ’–âœ¨ðŸ¥º,,ðŸ‘‰ðŸ‘ˆðŸ’–âœ¨âœ¨âœ¨âœ¨ðŸ¥º,,,ðŸ‘‰ðŸ‘ˆðŸ’–ðŸ’–âœ¨âœ¨,ðŸ‘‰ðŸ‘ˆâœ¨âœ¨âœ¨,,ðŸ‘‰ðŸ‘ˆðŸ’–ðŸ’–ðŸ¥ºðŸ‘‰ðŸ‘ˆðŸ’–ðŸ’–âœ¨ðŸ¥ºðŸ‘‰ðŸ‘ˆâœ¨âœ¨âœ¨,,ðŸ‘‰ðŸ‘ˆðŸ’–âœ¨âœ¨âœ¨âœ¨ðŸ¥º,,,,ðŸ‘‰ðŸ‘ˆðŸ’–ðŸ’–âœ¨,ðŸ‘‰ðŸ‘ˆðŸ’–ðŸ’–âœ¨,ðŸ‘‰ðŸ‘ˆðŸ’–ðŸ’–ðŸ¥º,,,ðŸ‘‰ðŸ‘ˆ"))
  end

end
